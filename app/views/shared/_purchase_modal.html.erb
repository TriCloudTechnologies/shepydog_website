<!-- Modal -->
<div class="modal fade" id="purchaseModal" tabindex="-1" aria-labelledby="purchaseModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <%= image_tag "logo.png", class: "img-fluid me-4", width: "40px" %>
        <h1 class="modal-title fs-5" id="exampleModalLabel">Purchase Shepydogs</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <button class="btn bg-color-gold" onclick="adjustValue(-1)">-</button>
        <input class="text-end" id="coinCount" type="number" />
        <button class="btn bg-color-gold" onclick="adjustValue(1)">+</button>
      </div>

      <div class="row px-4">
        <div class="col-12">
          <span class="fs-5 fw-bold">Total Amount</span>
          <span id="totalCoins">0</span>
          <span class="me-3">x</span>
          <span id="ethValue"><%= @token_details[9].to_f/10**18 %></span>
          <span>ETH</span>
          <span> = </span>
          <span id="totalAmount">0</span>
          <span>ETH</span>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn bg-color-gold" onclick="proceedPayment()">Proceed</button>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  function adjustValue(value) {
    const input = document.getElementById('coinCount');
    input.value = Number(input.value) + value;
    document.getElementById('totalCoins').innerHTML = input.value;

    valueElement = document.getElementById('ethValue');
    const numberString = valueElement.textContent || valueElement.innerText;
    const numberValue = parseFloat(numberString);
    document.getElementById('totalAmount').innerHTML = (numberValue * input.value).toFixed(6);
  }

  async function proceedPayment() {
    const coinsCount = document.getElementById('coinCount').value;
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
    const totalAmount = document.getElementById('totalAmount').innerHTML;

    const contractAddress = '0xADB2288bc444a6E76D723C27Fc8a100b1446b96a';
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const signer = provider.getSigner(); 
    const contractABI = [
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenQuantity",
            "type": "uint256"
          }
        ],
        "name": "buySaleTokens",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      }
    ];

    const contract = new ethers.Contract(contractAddress, contractABI, signer);
    const walletAddress = document.getElementById('walletAddress').value;

    await contract.buySaleTokens(parseInt(coinsCount), { value: ethers.utils.parseEther(totalAmount) });
  }
</script>